# Define a class to handle serial data reception and plotting
class SerialPlotter(QtCore.QObject):
    data_updated = QtCore.pyqtSignal(int)  # Signal emitted when new data is available

    def __init__(self, parent=None):
        super().__init__(parent)

    def read_serial(self):
        try:
            while ser.in_waiting:
                serial_data = ser.readline().decode('utf-8').strip()
                if serial_data:
                    data_parts = serial_data.split('\t')
                    if len(data_parts) >= 1:
                        filtered_data = ''.join(char for char in data_parts[0] if char.isdigit())  # Filter out non-numeric characters
                        value = int(filtered_data)
                        print(value)
                        self.data_updated.emit(value)  # Emit signal with the first value
        except Exception as e:
            print("An error occurred in read_serial:", e)